// Generated code: do not edit directly.
// See tool/README.md for more information.

import "../elements/base_element.dart";
import "../elements/elements.dart";

/// Maps SVG elements to constructors.
/// Used to parse SVG code.
final representationMap = <String, BaseElement Function()>{
  "a": () => A(),
  "animate": () => Animate(),
  "animateMotion": () => AnimateMotion(),
  "animateTransform": () => AnimateTransform(),
  "circle": () => Circle(),
  "clipPath": () => ClipPath(),
  "defs": () => Defs(),
  "desc": () => Desc(),
  "ellipse": () => Ellipse(),
  "feBlend": () => FEBlend(),
  "feColorMatrix": () => FEColorMatrix(),
  "feComponentTransfer": () => FEComponentTransfer(),
  "feComposite": () => FEComposite(),
  "feConvolveMatrix": () => FEConvolveMatrix(),
  "fediffuselighting": () => FEDiffuseLighting(),
  "feDisplacementMap": () => FEDisplacementMap(),
  "feDistantLight": () => FEDistantLight(),
  "feDropShadow": () => FEDropShadow(),
  "feFlood": () => FEFlood(),
  "feFuncA": () => FEFuncA(),
  "feFuncB": () => FEFuncB(),
  "feFuncG": () => FEFuncG(),
  "feFuncR": () => FEFuncR(),
  "feGaussianBlur": () => FEGaussianBlur(),
  "feImage": () => FEImage(),
  "feMerge": () => FEMerge(),
  "feMergeNode": () => FEMergeNode(),
  "feMorphology": () => FEMorphology(),
  "feOffset": () => FEOffset(),
  "fePointLight": () => FEPointLight(),
  "feSpecularLighting": () => FESpecularLighting(),
  "feSpotLight": () => FESpotLight(),
  "feTile": () => FETile(),
  "feTurbulence": () => FETurbulence(),
  "filter": () => Filter(),
  "g": () => G(),
  "image": () => Image(),
  "line": () => Line(),
  "linearGradient": () => LinearGradient(),
  "mpath": () => MPath(),
  "marker": () => Marker(),
  "mask": () => Mask(),
  "path": () => Path(),
  "pattern": () => Pattern(),
  "polygon": () => Polygon(),
  "polyline": () => Polyline(),
  "radialGradient": () => RadialGradient(),
  "rect": () => Rect(),
  "svg": () => SVG(),
  "script": () => Script(),
  "stop": () => Stop(),
  "symbol": () => Symbol(),
  "text": () => Text(),
  "textPath": () => TextPath(),
  "title": () => Title(),
  "use": () => Use(),
};
